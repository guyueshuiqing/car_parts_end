<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN"
        "http://ibatis.apache.org/dtd/ibatis-3-mapper.dtd">
<mapper namespace="com.hq.car_parts.mapper.UserMapper">
    <insert id="insertUser" parameterType="user">
		insert into user(username,password,email,real_name,role_id) values(#{username},#{password},#{email},#{realName},1)
	</insert>

    <select id="findUserInfoByUsername" resultType="java.util.HashMap">
		select username,sex,age,real_name,email,role_id from user where username = #{value}
	</select>

	<select id="findAllUsers" parameterType="string" resultType="user">
		select * from user
	</select>

	<select id="findUserByUsername" parameterType="string" resultType="user">
		select * from user where username = #{value}
	</select>

<!--    <select id="findUserLimitByUsername" parameterType="string" resultMap="staffLi">-->
<!--		SELECT `user`.username username,`user`.real_name real_name,`user`.email email,`user`.role_id role_id,staff_menu.limit_name FROM `user`,staff_limit_menus,staff_menu-->
<!--		WHERE `user`.username = staff_limit_menus.staff_name AND staff_menu.id = staff_limit_menus.`limit` AND `user`.username = #{value}-->
<!--	</select>-->

	<select id="findUserLimitByUsername" parameterType="string" resultMap="staffLi">
		SELECT `user`.username username,`user`.real_name real_name,`user`.email email,`user`.role_id role_id,staff_menu.limit_name
		FROM `user` LEFT OUTER JOIN staff_limit_menus ON `user`.username = staff_limit_menus.staff_name
		LEFT OUTER JOIN staff_menu ON staff_menu.id = staff_limit_menus.`limit`
		WHERE `user`.username = #{value}
	</select>

	<resultMap type="com.hq.car_parts.entity.User" id="staffLi">
		<result column="username" property="username"></result>
		<result column="real_name" property="realName"></result>
		<result column="email" property="email"></result>
		<result column="role_id" property="roleId"></result>
		<collection property="staffMenus" ofType="com.hq.car_parts.entity.grant.StaffMenu" column="username">
			<result column="limit_name" property="limitName"></result>
		</collection>
	</resultMap>

    <update id="updateUserRole" parameterType="user">
		update user set role_id=#{roleId} where username=#{username}
	</update>

    <delete id="deleteUserByUsername" parameterType="string">
		delete from user where username = #{value}
	</delete>
</mapper>